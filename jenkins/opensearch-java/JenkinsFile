pipeline {
    agent {
        node {
            label 'Jenkins-Agent-al2-x64-m5xlarge'
        }
    }
    environment {
        ARTIFACT_PATH = "~/.m2/repository/org/opensearch/client/${params.VERSION}/"
        VERSION = "${params.VERSION}"
    }
    stages {
        stage('parameters') {
            steps {
                script {
                    properties([
                            parameters([
                                    string(
                                            defaultValue: '',
                                            name: 'COMMIT_ID',
                                            trim: true
                                    ),
                                    string(
                                            name: 'VERSION',
                                            trim: true
                                    )
                            ])
                    ])
                }
            }
        }
        stage('publish to maven local') {
            steps {
                // checkout the commit
                git url: 'https://github.com/opensearch-project/opensearch-java.git', branch: 'main'
                sh('git checkout ${COMMIT_ID}')

                //publish to maven local
                sh('./gradlew publishtoMavenLocal')
                sh('ls -l ${ARTIFACT_PATH}')
            }
        }
//         stage('sign') {
//             environment {
//               // These ENV variables are required by https://github.com/opensearch-project/opensearch-signer-client
//               // This client is invoked internally by the sign script.
//               ROLE = "${SIGNER_CLIENT_ROLE}"
//               EXTERNAL_ID = "${SIGNER_CLIENT_EXTERNAL_ID}"
//               UNSIGNED_BUCKET = "${SIGNER_CLIENT_UNSIGNED_BUCKET}"
//               SIGNED_BUCKET = "${SIGNER_CLIENT_SIGNED_BUCKET}"
//             }
//             steps {
//                 // Fetch opensearch public key and add to keyring.
//                 sh('curl https://artifacts.opensearch.org/publickeys/opensearch.pgp -o $WORKSPACE/opensearch.pgp')
//                 sh('gpg --import $WORKSPACE/opensearch.pgp')
//
//                 // Sign artifacts
//                 withCredentials([usernamePassword(credentialsId: "${GITHUB_BOT_TOKEN_NAME}", usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_TOKEN')]) {
//                     git url: 'https://github.com/opensearch-project/opensearch-signer-client.git', branch: 'main'
//                     sh ('cd $WORKSPACE/opensearch-signer-client/src')
//                     sh ('./bootstrap')
//                     sh('ls -d ${ARTIFACT_PATH}/* | xargs -I {} sh -c './open_search_signer -i {} -o {}.sig -p pgp'')
//                     sh('cd ${ARTIFACT_PATH} && ls -d *.sig | xargs -I {} sh -c 'cat {} | gpg --enarmor | sed '\''s|ARMORED FILE|SIGNATURE|'\'' > $(basename -s .sig {}).asc'')
//
//                 }
//             }
//         }
//         stage('stage maven artifacts') {
//             tools {
//               maven "maven-3.8.2"
//             }
//             environment {
//               REPO_URL = "https://aws.oss.sonatype.org/"
//               STAGING_PROFILE_ID = "${SONATYPE_STAGING_PROFILE_ID}"
//               BUILD_ID = "${BUILD_NUMBER}"
//             }
//             steps {
//                 script {
//                   set_up()
//                 }
//                 // checkout the build repo
//                 git url: 'https://github.com/opensearch-project/opensearch-build.git', branch: 'main'
//                 // stage artifacts for release with Sonatype
//                 withCredentials([usernamePassword(credentialsId: 'Sonatype', usernameVariable: 'SONATYPE_USERNAME', passwordVariable: 'SONATYPE_PASSWORD')]) {
//                     sh('$WORKSPACE/opensearch-build/publish/stage-maven-release.sh ${ARTIFACT_PATH}')
//                 }
//             }
//         }
    }
}